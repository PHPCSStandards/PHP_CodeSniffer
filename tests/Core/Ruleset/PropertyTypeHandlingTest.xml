<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PropertyTypeHandlingTest" xsi:noNamespaceSchemaLocation="https://schema.phpcodesniffer.com/phpcs.xsd">

    <rule ref="./tests/Core/Ruleset/Fixtures/TestStandard/Sniffs/SetProperty/PropertyTypeHandlingSniff.php">
        <properties>
            <property name="expectsString" value="arbitraryvalue"/>
            <property name="expectsTrimmedString" value="   some value    "/>
            <property name="emptyStringBecomesNull" value="   	"/>

            <property name="expectsIntButAcceptsString" value="12345"/>
            <property name="expectsFloatButAcceptsString" value="12.345"/>

            <property name="expectsNull" value="null"/>
            <property name="expectsNullCase" value="NULL"/>
            <property name="expectsNullTrimmed" value="   null"/>

            <!-- Also tests that property names get cleaned of surrounding whitespace. -->
            <property name="  expectsBooleanTrue " value="true"/>
            <property name="expectsBooleanTrueCase" value="True"/>
            <property name="expectsBooleanTrueTrimmed" value="true   "/>
            <property name="expectsBooleanFalse" value="false"/>
            <property name="expectsBooleanFalseCase" value="fALSe"/>
            <property name="expectsBooleanFalseTrimmed" value="  false  "/>

            <property name="expectsArrayWithOnlyValues" type="array">
                <element value="string"/>
                <element value="10"/>
                <element value="1.5"/>
                <element value=""/>
                <element value="null"/>
                <element value="true"/>
                <element value="false"/>
            </property>

            <property name="expectsArrayWithKeysAndValues" type="array">
                <element key="string" value="string"/>
                <element key="10" value="10"/>
                <element key="float" value="1.5"/>
                <element key="" value=""/>
                <element key="null" value="null"/>
                <element key="true" value="true"/>
                <element key="false" value="false"/>
            </property>

            <property name="expectsArrayWithExtendedValues" type="array">
                <element value="string"/>
            </property>

            <property name="expectsArrayWithExtendedValues" type="array" extend="true">
                <element value="15"/>
                <element value="another string"/>
            </property>

            <property name="expectsArrayWithExtendedKeysAndValues" type="array">
                <element key="10" value="10"/>
                <element key="string" value="string"/>
            </property>

            <property name="expectsArrayWithExtendedKeysAndValues" type="array" extend="true">
                <element key="15" value="15"/>
                <element key="another string" value="another string"/>
            </property>

            <property name="expectsEmptyArray" type="array"/>

            <!-- Test array properties in combination with pre-existing array values. -->
            <property name="expectsNonEmptyArrayOverruledToEmpty" type="array">
            </property>

            <property name="expectsNonEmptyArrayOverruledToNewValue" type="array">
                <element key="another key" value="another value"/>
            </property>

            <property name="expectsExtendsWillJustSetToArrayWhenNoDefaultValuePresent" type="array" extend="true">
                <element key="foo" value="bar"/>
            </property>
            <property name="expectsExtendsWillOverruleNonArrayToNewArrayValue" type="array" extend="true">
                <element value="phpcbf"/>
            </property>

            <property name="expectsNonEmptyArrayExtendedWithNonEmptyArray" type="array" extend="true">
                <element key="another key" value="another value"/>
            </property>

            <property name="expectsNonEmptyArrayKeepsValueWhenExtendedWithEmptyArray" type="array" extend="true"/>

            <property name="expectsNonEmptyArrayDoubleExtendedWithNonEmptyArray" type="array" extend="true">
                <element key="foo" value="bar"/>
            </property>

            <property name="expectsNonEmptyArrayDoubleExtendedWithNonEmptyArray" type="array" extend="true">
                <element key="bar" value="baz"/>
                <element key="baz" value="boo"/>
            </property>

            <property name="expectsValuesInNonEmptyAssociativeArrayCanBeRedefined" type="array" extend="true">
                <element key="foo" value="bar"/>
                <element key="bar" value="foo"/>
            </property>

            <property name="expectsValuesInNonEmptyNumericallyIndexedArrayAreNotOverwritten" type="array" extend="true">
                <element value="valueB"/>
                <element value="valueC"/>
            </property>

            <property name="expectsPreexistingValuesStayTheSameWhileNewValuesGetCleaned" type="array" extend="true">
                <element key="newValueA" value="false"/>
                <element key="newValueB" value="  null  "/>
                <element value="1.5"/>
                <element value="true"/>
            </property>

            <property name="expectsArrayWithJustValueTrue" type="array">
                <element value="true"/>
            </property>

            <property name="expectsArrayWithJustValueFalse" type="array">
                <element value="false"/>
            </property>

            <property name="expectsArrayWithJustValueNull" type="array">
                <element value="null"/>
            </property>

            <property name="expectsStringNotArray" extend="true" value="some value"/>

        </properties>
    </rule>

</ruleset>
