name: Validate

on:
  # Run on all pushes and on all pull requests.
  push:
  pull_request:
  # Also run this workflow every Monday at 6:00 (to make sure the broken link check runs regularly).
  schedule:
    - cron: '0 6 * * 1'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkxml:
    name: Check XML files
    runs-on: ubuntu-latest

    env:
      XMLLINT_INDENT: '    '

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Updating the lists can fail intermittently, typically after Microsoft has released a new package.
      # This should not be blocking for this job, so ignore any errors from this step.
      # Ref: https://github.com/dotnet/core/issues/4167
      - name: Update the available packages list
        continue-on-error: true
        run: sudo apt-get update

      - name: Install xmllint
        run: sudo apt-get install --no-install-recommends -y libxml2-utils

      - name: Retrieve XML Schema
        run: curl -O https://www.w3.org/2012/04/XMLSchema.xsd

      # Show XML violations inline in the file diff.
      # @link https://github.com/marketplace/actions/xmllint-problem-matcher
      - name: Enable showing XML issues inline
        uses: korelstar/xmllint-problem-matcher@v1

      # Validate the XML ruleset files.
      # @link http://xmlsoft.org/xmllint.html
      - name: Validate rulesets against schema
        run: xmllint --noout --schema phpcs.xsd ./src/Standards/*/ruleset.xml

      # Validate the XSD file.
      # @link http://xmlsoft.org/xmllint.html
      - name: Validate XSD against schema
        run: xmllint --noout --schema ./XMLSchema.xsd ./phpcs.xsd

      # Check the code-style consistency of the XML files.
      - name: Check XML code style
        run: |
          diff -B ./phpcs.xml.dist <(xmllint --format "./phpcs.xml.dist")
          diff -B ./src/Standards/Generic/ruleset.xml <(xmllint --format "./src/Standards/Generic/ruleset.xml")
          diff -B ./src/Standards/MySource/ruleset.xml <(xmllint --format "./src/Standards/MySource/ruleset.xml")
          diff -B ./src/Standards/PEAR/ruleset.xml <(xmllint --format "./src/Standards/PEAR/ruleset.xml")
          diff -B ./src/Standards/PSR1/ruleset.xml <(xmllint --format "./src/Standards/PSR1/ruleset.xml")
          diff -B ./src/Standards/PSR2/ruleset.xml <(xmllint --format "./src/Standards/PSR2/ruleset.xml")
          diff -B ./src/Standards/PSR12/ruleset.xml <(xmllint --format "./src/Standards/PSR12/ruleset.xml")
          diff -B ./src/Standards/Squiz/ruleset.xml <(xmllint --format "./src/Standards/Squiz/ruleset.xml")
          diff -B ./src/Standards/Zend/ruleset.xml <(xmllint --format "./src/Standards/Zend/ruleset.xml")

  yamllint:
    name: 'Lint Yaml'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Yamllint on all yaml files in repo
        run: yamllint . --format colored --strict

      - name: Pipe Yamllint results on to GH for inline display
        if: ${{ failure() }}
        run: yamllint . --format github --strict

  markdownlint:
    name: 'Lint Markdown'
    runs-on: ubuntu-latest

    # Don't run the cronjob in this workflow on forks.
    if: github.event_name != 'schedule' || (github.event_name == 'schedule' && github.repository_owner == 'PHPCSStandards')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # @link https://github.com/marketplace/actions/problem-matcher-for-markdownlint-cli
      - name: Enable showing issue in PRs
        uses: xt0rted/markdownlint-problem-matcher@v3

      # @link https://github.com/marketplace/actions/markdownlint-cli2-action
      - name: Check markdown with CLI2
        uses: DavidAnson/markdownlint-cli2-action@v16

  remark:
    name: 'QA Markdown'
    runs-on: ubuntu-latest

    # Don't run the cronjob in this workflow on forks.
    if: github.event_name != 'schedule' || (github.event_name == 'schedule' && github.repository_owner == 'PHPCSStandards')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up node and enable caching of dependencies
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # To make the command available on CLI, it needs to be installed globally.
      - name: Install Remark CLI globally
        run: npm install --global remark-cli --foreground-scripts true --fund false

      # To allow for creating a custom config which references rules which are included
      # in the presets, without having to install all rules individually, a local install
      # works best (and installing the presets in the first place, of course).
      #
      # Note: the first group of packages are all part of the mono "Remark lint" repo.
      # The second group of packages (heading-whitespace and down) are additional
      # "external" rules/plugins.
      - name: Install Remark rules locally
        run: >
          npm install --foreground-scripts true --fund false
          remark-lint
          remark-gfm
          remark-preset-lint-consistent
          remark-preset-lint-recommended
          remark-preset-lint-markdown-style-guide
          remark-lint-checkbox-content-indent
          remark-lint-linebreak-style
          remark-lint-no-dead-urls
          remark-lint-no-duplicate-defined-urls
          remark-lint-no-empty-url
          remark-lint-no-heading-like-paragraph
          remark-lint-no-reference-like-url
          remark-lint-no-unneeded-full-reference-image
          remark-lint-no-unneeded-full-reference-link
          remark-lint-strikethrough-marker
          remark-lint-heading-whitespace
          remark-lint-list-item-punctuation
          remark-lint-match-punctuation
          remark-lint-no-hr-after-heading
          remark-lint-are-links-valid-duplicate
          remark-validate-links

      - name: Run Remark-lint
        run: remark . --frail

      # @link https://github.com/reviewdog/action-remark-lint
      - name: Show Remark-lint annotations in PR
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: reviewdog/action-remark-lint@v5
        with:
          fail_on_error: true
          install_deps: false
          level: info
          reporter: github-pr-check
